<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EstimateDAO">
	<!-- 190703 재홍 CRUD 쿼리 입력 -->
	<!-- 의뢰 등록 -->
	<insert id="insertEstimate" parameterType="EstimateVO">
		<selectKey keyProperty="estimateId" resultType="int" order="BEFORE">
			SELECT MAX(ESTIMATE_ID)+1 FROM ESTIMATE
		</selectKey>
		INSERT INTO ESTIMATE (	  ESTIMATE_ID
								, ESTIMATE_PRICE
								, REQUEST_DAY
								, TRADE_PROGRESS
								, REMARKS
								, APPLICANTS
								
								, LEVEL_OF_DIFFICULTY
								, CANDIDATE
								, APPLY_PURPOSE
								, EXAM_DATE
								, CATEGORY_ID
								
								, EXAM_CLASSFICATION
								, COMPANY_ID
								, EXAM_COUNT
								, EXAM_INTERVAL
								, ESTIMATE_NAME )
		VALUES ( #{estimateId}
				,#{estimatePrice}
				,SYSDATE <!-- REQUEST_DAY ESTIMATE_ID_SEQ-->
				, 'B1' <!-- 의뢰진행상태 : 진행전상태 ==B1 -->
				,#{remarks}
				,#{applicants}
				
				,#{levelOfDifficulty}
				,#{candidate}
				,#{applyPurpose}
				,#{examDate}
				,#{categoryId}
				
				,#{examClassfication}
				,#{companyId}
				,#{examCount}
				,#{examInterval}
				,#{estimateName})
	</insert>
	
	<!-- 의뢰 수정 -->
	<update id="updateEstimate" parameterType="EstimateVO">
		UPDATE ESTIMATE
		SET	  ESTIMATE_ID 		= #{estimateId}
			, ESTIMATE_PRICE 	= #{estimatePrice}
			, REQUEST_DAY 		= SYSDATE
			, TRADE_PROGRESS 	= #{tradeProgress}
			, REMARKS 			= #{remarks}
			, APPLICANTS		= #{applicants}
			
			, LEVEL_OF_DIFFICULTY = #{levelOfDifficulty}
			, CANDIDATE 		= #{candidate}
			, APPLY_PURPOSE 	= #{applyPurpose}
			, EXAM_DATE 		= #{examDate}
			, CATEGORY_ID		= #{categoryId}
			
			, EXAM_CLASSFICATION= #{examClassfication}
			, COMPANY_ID		= #{companyId}
			, EXAM_COUNT		= #{examCount}
			, EXAM_INTERVAL		= #{examInterval}
			, ESTIMATE_NAME		= #{estimateName}
			
		WHERE ESTIMATE_ID = #{estimateId}
	</update>
	
	<!-- 의뢰 ID로 삭제 -->
	<delete id="deleteEstimate" parameterType="EstimateVO">
		DELETE FROM ESTIMATE
		WHERE ESTIMATE_ID = #{estimateId}
	</delete>
	
	<!-- 의뢰목록 ID로 조회 -->
	<select id="getEstimate" resultType="EstimateVO">
    	   SELECT 	  E.ESTIMATE_ID
          			, C.CATEGORY_NAME AS CATEGORYNAME
					, E.ESTIMATE_PRICE
					, E.REQUEST_DAY
					, E.TRADE_PROGRESS
					, FIND_CODENM(TRADE_PROGRESS) AS TRADE_PROGRESS_NAME
					, E.REMARKS
					, E.APPLICANTS
					, E.LEVEL_OF_DIFFICULTY
					, E.CANDIDATE
					, E.APPLY_PURPOSE
					, E.EXAM_DATE
					, E.CATEGORY_ID
					, E.EXAM_CLASSFICATION
					, E.COMPANY_ID
					, E.EXAM_COUNT
					, FIND_CODENM(EXAM_COUNT) AS EXAM_COUNT_NAME
					, E.EXAM_INTERVAL
					, E.ESTIMATE_NAME
			        , C_MAIN.CATEGORY_MAIN_NAME
			        , C_MID.CATEGORY_MIDDLE_NAME
			        , C_SMA.CATEGORY_SMALL_NAME
		FROM ESTIMATE  E JOIN  CATEGORY C
      	ON C.CATEGORY_ID = E.CATEGORY_ID
     	JOIN CATEGORY_MAIN C_MAIN
     	ON C_MAIN.CATEGORY_MAIN_ID = C.CATEGORY_MAIN_ID
       	JOIN CATEGORY_MIDDLE C_MID
      	ON C_MID.CATEGORY_MIDDLE_ID = C.CATEGORY_MIDDLE_ID
      	JOIN CATEGORY_SMALL C_SMA
       	ON C_SMA.CATEGORY_SMALL_ID = C.CATEGORY_SMALL_ID
		WHERE ESTIMATE_ID = #{estimateId}
		
	</select>
	
	<!-- 의뢰목록 전체 조회 -->
		<select id="getEstimateList" resultType="EstimateVO">
		   SELECT B.* FROM( SELECT A.*, ROWNUM RN FROM (
			 SELECT 	  E.ESTIMATE_ID
          ,  C.CATEGORY_NAME AS CATEGORYNAME
					, E.ESTIMATE_PRICE
					, E.REQUEST_DAY
					, E.TRADE_PROGRESS
					, FIND_CODENM(TRADE_PROGRESS) AS TRADE_PROGRESS_NAME
					, E.REMARKS
					, E.APPLICANTS
					, E.LEVEL_OF_DIFFICULTY
					, E.CANDIDATE
					, E.APPLY_PURPOSE
					, E.EXAM_DATE
					, E.CATEGORY_ID
					, E.EXAM_CLASSFICATION
					, E.COMPANY_ID
					, E.EXAM_COUNT
					, FIND_CODENM(EXAM_COUNT) AS EXAM_COUNT_NAME
					, E.EXAM_INTERVAL
					, E.ESTIMATE_NAME
			FROM ESTIMATE  E JOIN  CATEGORY C
      ON C.CATEGORY_ID = E.CATEGORY_ID
			ORDER BY E.REQUEST_DAY DESC
		) A ) B 
		<where>
			RN BETWEEN #{start} AND #{end}
		</where>
		
		
	</select>
	
	
	
	<select id="getCount" resultType="int">
			SELECT COUNT(*) FROM ESTIMATE
		</select>
		
	<select id ="getCateoryId" resultType="int">
		SELECT CATEGORY_ID
		FROM CATEGORY
		WHERE CATEGORY_MAIN_ID= #{mainCategoryId} AND CATEGORY_MIDDLE_ID = #{middleCategoryId} AND CATEGORY_SMALL_ID = #{smallCategoryId}
	</select>
</mapper>